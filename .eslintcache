[{"C:\\GitHub\\image-shuffler-ui\\src\\index.js":"1","C:\\GitHub\\image-shuffler-ui\\src\\App.js":"2","C:\\GitHub\\image-shuffler-ui\\src\\serviceWorker.js":"3","C:\\GitHub\\image-shuffler-ui\\src\\app\\store.js":"4","C:\\GitHub\\image-shuffler-ui\\src\\features\\counter\\counterSlice.js":"5","C:\\GitHub\\image-shuffler-ui\\src\\features\\counter\\Counter.js":"6","C:\\GitHub\\image-shuffler-ui\\src\\features\\login\\Login.js":"7","C:\\GitHub\\image-shuffler-ui\\src\\features\\login\\userSlice.js":"8","C:\\GitHub\\image-shuffler-ui\\src\\features\\firebase.js":"9","C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\AppHeader.js":"10","C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\filesSlice.js":"11","C:\\GitHub\\image-shuffler-ui\\src\\features\\grid\\Grid.js":"12","C:\\GitHub\\image-shuffler-ui\\src\\features\\grid\\GridElement.js":"13","C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\urlSlice.js":"14"},{"size":644,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1418,"mtime":1609388663633,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":367,"mtime":1609387785701,"results":"19","hashOfConfig":"16"},{"size":1551,"mtime":499162500000,"results":"20","hashOfConfig":"16"},{"size":1619,"mtime":1608951286767,"results":"21","hashOfConfig":"16"},{"size":677,"mtime":1608957490698,"results":"22","hashOfConfig":"16"},{"size":843,"mtime":1609045220441,"results":"23","hashOfConfig":"16"},{"size":750,"mtime":1609385051002,"results":"24","hashOfConfig":"16"},{"size":2272,"mtime":1609397346406,"results":"25","hashOfConfig":"16"},{"size":892,"mtime":1609377972580,"results":"26","hashOfConfig":"16"},{"size":588,"mtime":1609398049713,"results":"27","hashOfConfig":"16"},{"size":487,"mtime":1609400031127,"results":"28","hashOfConfig":"16"},{"size":543,"mtime":1609389849440,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"x05e2k",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\GitHub\\image-shuffler-ui\\src\\index.js",[],["63","64"],"C:\\GitHub\\image-shuffler-ui\\src\\App.js",["65"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport AppHeader from './features/appHeader/AppHeader';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectUser } from \"./features/login/userSlice\";\r\nimport Login from './features/login/Login';\r\nimport { auth } from './features/firebase';\r\nimport { login, logout } from \"./features/login/userSlice\"\r\nimport Grid from './features/grid/Grid';\r\nimport { selectUrls } from './features/appHeader/urlSlice';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const imgUrls = useSelector(selectUrls);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      console.log(\"user is\", authUser)\r\n      if (authUser) {\r\n        dispatch(login({\r\n          uid: authUser.uid,\r\n          photo: authUser.photoURL,\r\n          email: authUser.email,\r\n          displayName: authUser.displayName\r\n        }))\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    console.log(imgUrls)\r\n  }, [imgUrls])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {user ? (\r\n        <>\r\n          <AppHeader className=\"appHeader\"></AppHeader>\r\n          <h1>Image Shuffler App</h1>\r\n          <Grid className=\"imageGrid\"></Grid>\r\n        </>\r\n      ) : (\r\n          <Login />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\GitHub\\image-shuffler-ui\\src\\serviceWorker.js",[],"C:\\GitHub\\image-shuffler-ui\\src\\app\\store.js",[],"C:\\GitHub\\image-shuffler-ui\\src\\features\\counter\\counterSlice.js",[],["66","67"],"C:\\GitHub\\image-shuffler-ui\\src\\features\\counter\\Counter.js",[],"C:\\GitHub\\image-shuffler-ui\\src\\features\\login\\Login.js",[],"C:\\GitHub\\image-shuffler-ui\\src\\features\\login\\userSlice.js",[],"C:\\GitHub\\image-shuffler-ui\\src\\features\\firebase.js",["68"],"import firebase from 'firebase'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAnjoXZd7IXXE0Y3N3W1urGBCkuy_MD1SI\",\r\n    authDomain: \"image-shuffler-ui.firebaseapp.com\",\r\n    projectId: \"image-shuffler-ui\",\r\n    storageBucket: \"image-shuffler-ui.appspot.com\",\r\n    messagingSenderId: \"248707663508\",\r\n    appId: \"1:248707663508:web:ae5c5cb62086ec74edd681\",\r\n    measurementId: \"G-VMBDJXJ60L\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, provider, storage, db };\r\nexport default db;","C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\AppHeader.js",["69","70","71","72","73","74"],"C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\filesSlice.js",["75"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const filesSlice = createSlice({\r\n    name: \"files\",\r\n    initialState: {\r\n        value: [],\r\n    },\r\n    reducers: {\r\n        setSelectedFiles: (state, action) => {\r\n            console.log(\"setting files:\")\r\n            console.log(action.payload)\r\n            // var result = getFields(action.payload, \"name\")\r\n            // console.log(result)\r\n            // state.value = result;\r\n            state.value = action.payload;\r\n            // state.value = action.payload[0].name;\r\n        },\r\n    },\r\n});\r\n\r\nfunction getFields(input, field) {\r\n    var output = [];\r\n    for (var i = 0; i < input.length; ++i)\r\n        output.push(input[i][field]);\r\n    return output;\r\n}\r\n\r\nexport const { setSelectedFiles } = filesSlice.actions;\r\n\r\nexport const selectFiles = (state) => state.files.value;\r\n\r\nexport default filesSlice.reducer;\r\n","C:\\GitHub\\image-shuffler-ui\\src\\features\\grid\\Grid.js",["76"],"C:\\GitHub\\image-shuffler-ui\\src\\features\\grid\\GridElement.js",["77"],"C:\\GitHub\\image-shuffler-ui\\src\\features\\appHeader\\urlSlice.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":28,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":14,"column":7,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"89","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"82","severity":1,"message":"90","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":26},{"ruleId":"82","severity":1,"message":"91","line":8,"column":19,"nodeType":"84","messageId":"85","endLine":8,"endColumn":21},{"ruleId":"82","severity":1,"message":"92","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"93","line":13,"column":11,"nodeType":"84","messageId":"85","endLine":13,"endColumn":24},{"ruleId":"82","severity":1,"message":"94","line":14,"column":11,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"95","line":21,"column":10,"nodeType":"84","messageId":"85","endLine":21,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":21},{"ruleId":"82","severity":1,"message":"97","line":7,"column":11,"nodeType":"84","messageId":"85","endLine":7,"endColumn":15},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["98"],["99"],"'firebaseApp' is assigned a value but never used.","'axios' is defined but never used.","'setSelectedFiles' is defined but never used.","'db' is defined but never used.","'firebase' is defined but never used.","'selectedFiles' is assigned a value but never used.","'imgUrls' is assigned a value but never used.","'getFields' is defined but never used.","'selectFiles' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]